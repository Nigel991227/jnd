{"remainingRequest":"/Users/xieronghuo/jnd-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xieronghuo/jnd-demo/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/Users/xieronghuo/jnd-demo/src/App.vue","mtime":1611032760799},{"path":"/Users/xieronghuo/jnd-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xieronghuo/jnd-demo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/xieronghuo/jnd-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xieronghuo/jnd-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}