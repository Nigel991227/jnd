{"remainingRequest":"/Users/xieronghuo/jnd-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xieronghuo/jnd-demo/src/App.vue?vue&type=template&id=a4c686d2&","dependencies":[{"path":"/Users/xieronghuo/jnd-demo/src/App.vue","mtime":1611030915707},{"path":"/Users/xieronghuo/jnd-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xieronghuo/jnd-demo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/xieronghuo/jnd-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xieronghuo/jnd-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}